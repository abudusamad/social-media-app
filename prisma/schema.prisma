// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  username String? @unique
  bio String
  email String? @unique
  emailverifed DateTime?
  image String?
  coverImage String?
  profileImage String?
  hashPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followingIds String[] @db.ObjectId
  hasNotifications Boolean?


  posts Post[]
  comments Comment[]
  notication Notication[]
}

model Post{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  crearAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId
  image String?


  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
}


model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId


  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notication{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId
  read Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}